#import drive
from google.colab import drive
drive.mount('/content/drive')

#Turn it into dataframe
import pandas as pd
import numpy as np
import os
df = pd.read_csv('/content/drive/MyDrive/Data/variants&Metadata_notfixed.csv')

#Label encoding
df_encoded=df.replace({'N': 0, 'A':1, 'C':2, 'G':3, 'T':4})

#KAOS encoding
def cgr(sequence, seq_base=['N', 'A', 'G', 'C', 'T'], resolution=200):
    """
    Generate a Chaos Game Representation matrix for a given sequence.
    This is a placeholder implementation and needs to be replaced
    with an actual CGR calculation based on your requirements.
    """
    matrix = np.zeros((resolution, resolution))  # Initialize a resolution x resolution matrix
    # Implement the CGR logic here...
    return matrix
data = df

# Convert to DataFrame (transpose is already implied in data above)
data2 = data.transpose()

# Ensure all data is treated as strings
data3 = data2.astype(str)

# List of filenames to save the output
list_vec = [f"cgr_output_{i}.csv" for i in range(1, 901)]  # Generate file names for 900 outputs

# Iterate over the first 900 sequences and compute CGR
for i in range(min(25, data3.shape[1])):  # Handle cases with fewer than 900 sequences
    sequence = data3.iloc[:, i].values[0]  # Extract the sequence
    cgr_matrix = cgr(sequence, seq_base=['N', 'A', 'G', 'C', 'T'], resolution=200)

    # Save the CGR matrix to a CSV file
    pd.DataFrame(cgr_matrix).to_csv(list_vec[i], index=False, header=False)
